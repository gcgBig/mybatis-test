<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.mybatis.pojo.Teacher">  
	
	<sql id="table"> teacher </sql>
	
	<resultMap type="teacher" id="teacherMap">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="status" property="status" />
		<association property="book" column="book_id" javaType="Book">
			<result column="book_id" property="id" />
			<result column="book_name" property="name" />
		</association>
		<!-- <collection property="students" column="id" select="com.mybatis.pojo.Student.getStudentList" /> -->
		<collection property="students" ofType="student">
			<result column="students_id" property="id" />
			<result column="students_name" property="name" />
			<result column="teacher_id" property="teacherId" />
		</collection>
	</resultMap>
	
	<insert id="saveTeacher" parameterType="teacher">
		insert into 
		<include refid="table" /> 
		(name) values (#{name}) 
	</insert>
	
	<insert id="saveByRandom" parameterType="teacher">
		<selectKey keyProperty="id" order="BEFORE" resultType="int">
			SELECT FLOOR(RAND() * 10000) 
		</selectKey>
		insert into 
		<include refid="table" /> 
		(id, name)
		values 
		(#{id}, #{name}) 
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List" >
		insert into 
		<include refid="table" /> 
		(name) values 
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.name})
		</foreach>
	</insert>
	
	<update id="update">
		update 
		<include refid="table" />
		set 
		id = #{id},
		name = #{name}
	</update>
	
	<delete id="delete">
		delete from 
		<include refid="table" />
		where id = #{id}
	</delete>
	
    <select id="selectTeacher" resultType="teacher">  
        select * from teacher  
    </select>  
    
    <select id="getTeacherAndBook" parameterType="teacher" resultMap="teacherMap">
    	select 
    		A.id as id,
    		A.name as name,
    		B.id as book_id,
    		B.name as book_name,
    		C.id as students_id,
    		C.name as students_name
    	from teacher as A left join book as B
    	on A.book_id = b.id
    	left join student as C
		on A.id = C.teacher_id
    	where 
    		A.id = #{id}
    </select>
    
    <select id="getTeacher" parameterType="teacher" resultType="teacher">
    	select * from 
    	<include refid="table" />
    	<where>
    		<if test="id != null and id != 0">
    			and id = #{id}
    		</if>
    		<if test="name != null">
    			and name = #{name}
    		</if>
    		<if test="status != null">
    			and status in 
    			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
    				#{item}
    			</foreach>
    		</if>
    	</where>
    </select>
    
</mapper> 